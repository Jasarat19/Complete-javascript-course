///////////////////////////////////////
// Activating Strict Mode

///////////////////////////////////////
// Functions



///////////////////////////////////////
// Function Declarations vs. Expressions

///////////////////////////////////////
// Arrow functions

// Functions Calling Other Functions

function cutFruitPieces(fruit) {
  return fruit * 4;
}

function fruitProcessor(apples, oranges) {
  const applePieces = cutFruitPieces(apples);
  const orangePieces = cutFruitPieces(oranges);

  const juice = `Juice with ${applePieces} piece of apple and ${orangePieces} pieces of orange.`;
  return juice;
}
console.log(fruitProcessor(2, 3));

////////////////////////
//Arrays
const friends = ['Michael', 'Steven', 'Peter'];
const y = new Array(1991, 1984, 2008, 2020);
friends[2] = 'Jay'; ///--CONST TAO HOBE
console.log(friends);
// friends = ['Bob', 'Alice']--CONST TAI HOBENA

const jonas = [firstName, 'Schmedtmann', 2037 - 1991, 'teacher', friends];//-- WE CAN PUT AN ARRAY ONSIDE OF ANOTHER ARRAY

///////////////////////////////////////
// Basic Array Operations (Methods)
const friends = ['Michael', 'Steven', 'Peter'];
// Add elements
const newLength = friends.push('Jay');
//push methods add element tothe end of an array!
// push func returns length of array =>console.log(newLength);

//unshift methods add element tothe begining of an array!
friends.unshift('John');
removing element

friends.pop(); // remove from Last
const popped = friends.pop();// pop func returns removed element 
friends.shift(); //remove from First & returns removed element 
 indexOf returns the index of the array 
 includes-check if the item is inthe array, return true or false




